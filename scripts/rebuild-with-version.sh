#!/bin/bash

# Script para Rebuild com Vers√£o Correta - SoftwareHub
# For√ßa rebuild do container com a vers√£o atual

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo -e "${CYAN}================================================${NC}"
echo -e "${CYAN}   Rebuild com Vers√£o Correta - SoftwareHub    ${NC}"
echo -e "${CYAN}================================================${NC}"
echo ""

# Fun√ß√£o para log
log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

# Verificar se arquivo VERSION existe
if [ ! -f "VERSION" ]; then
    log_error "Arquivo VERSION n√£o encontrado"
    exit 1
fi

CURRENT_VERSION=$(cat VERSION)
log_info "üìÑ Vers√£o atual: v${CURRENT_VERSION}"

# 1. Copiar arquivo VERSION
log_info "üìã Passo 1/4: Copiando arquivo VERSION..."
cp VERSION backend/VERSION
log_success "Arquivo VERSION copiado para backend/"
echo -e "${BLUE}   Conte√∫do: $(cat backend/VERSION)${NC}"

# 2. Parar containers
log_info "üõë Passo 2/4: Parando containers..."
if [ -f "docker-compose.production.yml" ]; then
    docker-compose -f docker-compose.production.yml down
else
    docker-compose down
fi
log_success "Containers parados"

# 3. Rebuild backend
log_info "üî® Passo 3/4: Rebuild do backend..."
if [ -f "docker-compose.production.yml" ]; then
    docker-compose -f docker-compose.production.yml build --no-cache backend
    docker-compose -f docker-compose.production.yml up -d
else
    docker-compose build --no-cache backend
    docker-compose up -d
fi
log_success "Backend rebuildado"

# 4. Aguardar e verificar
log_info "‚è≥ Passo 4/4: Aguardando inicializa√ß√£o..."
sleep 15

# Verificar se est√° funcionando
log_info "üîç Verificando resultado..."

# Verificar containers
if [ -f "docker-compose.production.yml" ]; then
    if docker-compose -f docker-compose.production.yml ps | grep -q "Up"; then
        log_success "‚úÖ Containers est√£o rodando"
        echo ""
        echo -e "${BLUE}üìä Status dos containers:${NC}"
        docker-compose -f docker-compose.production.yml ps
    else
        log_error "‚ùå Containers n√£o est√£o rodando"
        docker-compose -f docker-compose.production.yml ps
        exit 1
    fi
else
    if docker-compose ps | grep -q "Up"; then
        log_success "‚úÖ Containers est√£o rodando"
        echo ""
        echo -e "${BLUE}üìä Status dos containers:${NC}"
        docker-compose ps
    else
        log_error "‚ùå Containers n√£o est√£o rodando"
        docker-compose ps
        exit 1
    fi
fi

# Verificar vers√£o
log_info "üìä Verificando vers√£o..."
if [ -f "scripts/check-version.sh" ]; then
    ./scripts/check-version.sh
else
    log_warning "Script de verifica√ß√£o n√£o encontrado"
fi

echo ""
echo -e "${CYAN}================================================${NC}"
echo -e "${CYAN}   Rebuild Conclu√≠do                            ${NC}"
echo -e "${CYAN}================================================${NC}"
echo ""
echo -e "${GREEN}‚úÖ Rebuild com vers√£o v${CURRENT_VERSION} conclu√≠do!${NC}" 